# DON'T REMOVE FROM test script.
CYAN='\033[0;36m'
BCYAN='\033[1;36m'
NC='\033[0m' # No Color
DIVIDER=$(printf %"$(tput cols)"s | tr " " "*")
DIVIDER+="\n"

function get_project_id() {
    local __resultvar=$1
    VALUE=$(gcloud config get-value project | xargs)
    eval $__resultvar="'$VALUE'"
}

function get_project_number() {
    local __resultvar=$1
    local PRO=$2
    VALUE=$(gcloud projects list --filter="project_id=$PRO" --format="value(PROJECT_NUMBER)" | xargs)
    eval $__resultvar="'$VALUE'"
}

# DISPLAY HELPERS
function section_open() {
    section_description=$1
    printf "$DIVIDER"
    printf "${CYAN}$section_description${NC} \n"
    printf "$DIVIDER"
}

function section_close() {
    printf "$DIVIDER"
    printf "${CYAN}$section_description ${BCYAN}- done${NC}\n"
    printf "\n\n"
}

function evalTest() {
    local command=$1
    local expected=$2

    local ERR=""
    got=$(eval $command 2>errFile)
    ERR=$(<errFile)

    if [ ${#ERR} -gt 0 ]; then
        if [ "$expected" = "EXPECTERROR" ]; then
            printf "ok \n"
            return
        fi

        printf "expecting no error, got error='$ERR'   \n"
        exit 1
    fi

    if [ "$got" != "$expected" ]; then
        printf "expecting: '$expected' got: '$got'  \n"
        exit 1
    fi

    printf "$expected is ok\n"
}
# END DON'T REMOVE FROM test script.

DOMAIN=$APPINABOX_YESORNOSITE_DOMAIN
ANSWER="yes"
LOCATION=US
get_project_id PROJECT
get_project_number PROJECT_NUMBER $PROJECT

BUCKET=$DOMAIN
BASENAME=${DOMAIN//./-}
CLOUDDNSZONE=$BASENAME-zone

gcloud config set project ${PROJECT}

terraform init
terraform apply -auto-approve -var project_id="${PROJECT}" -var project_number="${PROJECT_NUMBER}" -var domain="${DOMAIN}" -var location="${LOCATION}" -var yesorno="${ANSWER}" -var basename="${BASENAME}"


# Check on things
section_open "Test Load Balancer parts exist"
evalTest 'gcloud compute forwarding-rules describe $BASENAME-https-lb-forwarding-rule --global --format="value(name)"' $BASENAME-https-lb-forwarding-rule
evalTest 'gcloud compute target-https-proxies describe $BASENAME-ssl-lb-proxy --global --format="value(name)"' $BASENAME-ssl-lb-proxy
evalTest 'gcloud compute forwarding-rules describe  $BASENAME-http-lb-forwarding-rule --global --format="value(name)"'  $BASENAME-http-lb-forwarding-rule
evalTest 'gcloud compute target-http-proxies describe $BASENAME-lb-proxy  --global --format="value(name)"' $BASENAME-lb-proxy 
evalTest 'gcloud compute url-maps describe $BASENAME-lb --global --format="value(name)"' $BASENAME-lb
evalTest 'gcloud compute backend-buckets describe  $BASENAME-be --format="value(name)"'  $BASENAME-be
section_close

section_open "Test SSL cert exist"
evalTest 'gcloud compute ssl-certificates describe $BASENAME-cert --format="value(name)"'  $BASENAME-cert
section_close

section_open "Test the Cloud Storage Bucket exists"
evalTest 'gsutil ls gs://$DOMAIN | grep 404 '  ""
section_close

section_open "Test the IP Address exists"
evalTest 'gcloud compute addresses describe $BASENAME-ip --global --format="value(name)"'  $BASENAME-ip
section_close

section_open "Test DNS Records exist"
IP=$(gcloud compute addresses describe $BASENAME-ip --global --format="value(address)")
evalTest 'gcloud dns record-sets describe $DOMAIN --zone $CLOUDDNSZONE --type A --format="value(DATA)"' $IP

terraform destroy -auto-approve -var project_id="${PROJECT}" -var project_number="${PROJECT_NUMBER}" -var domain="${DOMAIN}" -var location="${LOCATION}" -var yesorno="${ANSWER}" -var basename="${BASENAME}"


section_open "Test Load Balancer parts don't exist"
evalTest 'gcloud compute forwarding-rules describe $BASENAME-https-lb-forwarding-rule --global --format="value(name)"' "EXPECTERROR"
evalTest 'gcloud compute target-https-proxies describe $BASENAME-ssl-lb-proxy --global --format="value(name)"' "EXPECTERROR"
evalTest 'gcloud compute forwarding-rules describe  $BASENAME-http-lb-forwarding-rule --global --format="value(name)"' "EXPECTERROR"
evalTest 'gcloud compute target-http-proxies describe $BASENAME-lb-proxy  --global --format="value(name)"' "EXPECTERROR"
evalTest 'gcloud compute url-maps describe $BASENAME-lb --global --format="value(name)"' "EXPECTERROR"
evalTest 'gcloud compute backend-buckets describe  $BASENAME-be --format="value(name)"'  "EXPECTERROR"
section_close

section_open "Test SSL cert doesnt exist"
evalTest 'gcloud compute ssl-certificates describe $BASENAME-cert --format="value(name)"'  "EXPECTERROR"
section_close

section_open "Test the Cloud Storage Bucket doesnt exist"
evalTest 'gsutil ls gs://$DOMAIN | grep 404 | xargs'  "EXPECTERROR"
section_close

section_open "Test the IP Address doesnt exist"
evalTest 'gcloud compute addresses describe $BASENAME-ip --global --format="value(name)"'  "EXPECTERROR"
section_close

section_open "Test DNS Records dont exist"
evalTest 'gcloud dns record-sets describe $DOMAIN --zone $CLOUDDNSZONE --type A --format="value(DATA)"' "EXPECTERROR"


printf "$DIVIDER"
printf "CONGRATS!!!!!!! \n"
printf "You got the end the of your test with everything working. \n"
printf "$DIVIDER"